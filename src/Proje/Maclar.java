/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proje;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class Maclar extends javax.swing.JFrame {
public static DefaultTableModel MaclarTable = new DefaultTableModel();
    /**
     * Creates new form Maclar
     */
    public Maclar() {
        initComponents();
        
       MaclarTable.setRowCount(0);
        MaclarTable.setColumnIdentifiers(new String[]{"Mac Kodu","TakımAdı1", "VS", "TakımAdı2","Skor"});
         try {
            Connection con;
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
            Statement s = con.createStatement();
            String sql = "SELECT * FROM Fikstur";
            ResultSet rs = s.executeQuery(sql);
            while (rs.next()) {
               MaclarTable.addRow(new Object[]{rs.getInt("mackod"), (rs.getString("takimbir")), (rs.getString("vs")), (rs.getString("takimiki"))});
                 
                  
            }
        } catch (SQLException ex) {
            Logger.getLogger(Fikstur.class.getName()).log(Level.SEVERE, null, ex);

        }
         
         
         jTable1.setModel(MaclarTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Skor Ata");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("vs");

        jLabel2.setText("Skor1");

        jLabel3.setText("Skor2");

        jButton3.setText("Maç Sonuçlarını Yazdır");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Puan Tablosuna Git");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setText("Ana Menüye Git");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("Fikstüre Git");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setText("Kayıt Adı");

        jTextField4.setText("jTextField4");

        jLabel5.setText("Mac Sorgulama");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jButton5)))
                                .addGap(54, 54, 54))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(41, 41, 41))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(89, 89, 89)
                        .addComponent(jLabel3)
                        .addGap(156, 156, 156))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1)))
                        .addGap(26, 26, 26)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(296, 296, 296)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(50, 50, 50))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        MaclarTable.setValueAt(jTextField1.getText().toString()+ "-"+ jTextField2.getText().toString(), jTable1.getSelectedRow(),4 );
        
        int macKodu = Integer.parseInt(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 0)));

        int skor1 = Integer.parseInt(jTextField1.getText());
        int skor2 = Integer.parseInt(jTextField2.getText());
        String takim1 ="",takim2="";
       
        
        EntityManagerFactory emf=Persistence.createEntityManagerFactory("BP2_PROJEMPU");
        EntityManager em=emf.createEntityManager();
        
        Query q=em.createQuery("SELECT f  FROM EFikstur f");
        List<EFikstur> MacList = q.getResultList();
        for (EFikstur item : MacList) {
            if (macKodu==item.getMackod()) {
                
              
                if (skor1 > skor2) {

                    try {
                        Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                        
                        Statement stTakim1 = con.createStatement();
                       
                        ResultSet rsTakim1 = stTakim1.executeQuery("SELECT * FROM PUANTABLO WHERE TAKIM_ADI='" + item.getTakimbir() + "'");
                        rsTakim1.next();
                        int takim1Puan =rsTakim1.getInt("PUAN");
                        takim1Puan += 3;
                        
                       PreparedStatement updateTakim1 = con.prepareStatement("UPDATE PUANTABLO SET PUAN=? WHERE TAKIM_ADI=?");
                      updateTakim1.setInt(1, takim1Puan);
                      updateTakim1.setString(2, item.getTakimbir());
                        updateTakim1.executeUpdate();
                        
                      PreparedStatement updateFikstur = con.prepareStatement("UPDATE FIKSTUR SET OYNANDIMI = ? WHERE MACKOD = ?");
                      updateFikstur.setInt(1, 1);
                      updateFikstur.setInt(2, item.getMackod());
                      updateFikstur.executeUpdate();
                        

                    } catch (SQLException ex) {
                        Logger.getLogger(Maclar.class.getName()).log(Level.SEVERE, null, ex);
                    }
          
                }
              else if(skor2>skor1){
                   try {
                        Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                        
                        Statement stTakim2 = con.createStatement();
                       
                        ResultSet rsTakim2 = stTakim2.executeQuery("SELECT * FROM PUANTABLO WHERE TAKIM_ADI='" + item.getTakimiki() + "'");
                        rsTakim2.next();
                        int takim2Puan =rsTakim2.getInt("PUAN");
                        takim2Puan += 3;
                        
                       PreparedStatement updateTakim2 = con.prepareStatement("UPDATE PUANTABLO SET PUAN=? WHERE TAKIM_ADI=?");
                      updateTakim2.setInt(1, takim2Puan);
                      updateTakim2.setString(2, item.getTakimiki());
                        updateTakim2.executeUpdate();
                        
                      PreparedStatement updateFikstur = con.prepareStatement("UPDATE FIKSTUR SET OYNANDIMI = ? WHERE MACKOD = ?");
                      updateFikstur.setInt(1, 1);
                      updateFikstur.setInt(2, item.getMackod());
                      updateFikstur.executeUpdate();
                        

                           
                    } catch (SQLException ex) {
                        Logger.getLogger(Maclar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                  
              }
                
                 else if(skor1==skor2){
                   try {
                        Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                        
                        Statement stTakim2 = con.createStatement();
                       
                        ResultSet rsTakim2 = stTakim2.executeQuery("SELECT * FROM PUANTABLO WHERE TAKIM_ADI='" + item.getTakimiki() + "'");
                        rsTakim2.next();
                        int takim2Puan =rsTakim2.getInt("PUAN");
                        takim2Puan += 1;
                        
                       PreparedStatement updateTakim2 = con.prepareStatement("UPDATE PUANTABLO SET PUAN=? WHERE TAKIM_ADI=?");
                      updateTakim2.setInt(1, takim2Puan);
                      updateTakim2.setString(2, item.getTakimiki());
                        updateTakim2.executeUpdate();
                        
                         Statement stTakim1 = con.createStatement();
                       
                        ResultSet rsTakim1 = stTakim1.executeQuery("SELECT * FROM PUANTABLO WHERE TAKIM_ADI='" + item.getTakimbir() + "'");
                        rsTakim1.next();
                        int takim1Puan =rsTakim1.getInt("PUAN");
                        takim1Puan += 1;
                        
                       PreparedStatement updateTakim1 = con.prepareStatement("UPDATE PUANTABLO SET PUAN=? WHERE TAKIM_ADI=?");
                      updateTakim1.setInt(1, takim1Puan);
                      updateTakim1.setString(2, item.getTakimbir());
                        updateTakim1.executeUpdate();
                        
                      PreparedStatement updateFikstur = con.prepareStatement("UPDATE FIKSTUR SET OYNANDIMI = ? WHERE MACKOD = ?");
                      updateFikstur.setInt(1, 1);
                      updateFikstur.setInt(2, item.getMackod());
                      updateFikstur.executeUpdate();
                        

                           
                    } catch (SQLException ex) {
                        Logger.getLogger(Maclar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                  
              }
            }
        }
       
        
        
        Connection con;
    try {
        int macKod = Integer.parseInt(String.valueOf(MaclarTable.getValueAt(jTable1.getSelectedRow(), 0)));
        con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
        con.setAutoCommit(false);
            String sql = "UPDATE MACLAR SET SKOR=? WHERE MACKOD=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,jTextField1.getText()+"-" +jTextField2.getText());
           ps.setInt(2, macKod);

            ps.executeUpdate();
            con.commit();
    } catch (SQLException ex) {
        Logger.getLogger(Maclar.class.getName()).log(Level.SEVERE, null, ex);
    }
        

        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      try{
                  
           
               File file = new File("C:\\FutbolFederasyonu\\"+jTextField3.getText()+".txt");
            
               if(!file.exists()){
                   file.createNewFile();
               }
               
               FileWriter fw = new FileWriter(file.getAbsoluteFile());
               BufferedWriter bw = new BufferedWriter(fw);
               
           
               for(int i = 0; i < jTable1.getRowCount(); i++){
                
                   for(int j = 0; j < jTable1.getColumnCount(); j++){
                       bw.write(jTable1.getModel().getValueAt(i, j)+" ");
                   }
                   
                   bw.write("\n");
                   bw.newLine();
               }
              
               bw.close();
               
               fw.close();
               JOptionPane.showMessageDialog(null, "Fikstur başarıyla yazdırıldı.");
               
               }catch(Exception ex){
                   ex.printStackTrace();
               }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        PuanTablosu pt = new PuanTablosu();
        pt.setVisible(true);
        this.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       AnaMenu mn = new AnaMenu();
       mn.setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      Fikstur fks = new Fikstur();
      fks.setVisible(true);
      this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Maclar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Maclar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Maclar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Maclar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Maclar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
